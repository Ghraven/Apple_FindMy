from cryptography.hazmat.primitives.asymmetric import ec

class KeyPair:
    def __init__(self, private_key: bytes) -> None: ...
    @classmethod
    def generate(cls) -> KeyPair: ...
    @classmethod
    def from_b64(cls, key_b64: str) -> KeyPair: ...
    @property
    def private_key_bytes(self) -> bytes: ...
    @property
    def private_key_b64(self) -> str: ...
    @property
    def adv_key_bytes(self) -> bytes: ...
    @property
    def adv_key_b64(self) -> str: ...
    @property
    def hashed_adv_key_bytes(self) -> bytes: ...
    @property
    def hashed_adv_key_b64(self) -> str: ...
    def dh_exchange(self, other_pub_key: ec.EllipticCurvePublicKey) -> bytes: ...
